function runTests() {
  var testNum = -1;
  function th(success) { // Test handler
    testNum++;
    if(!success)
    {
      printResult('Тест ' + testNum + ' не пройден! (см. консоль)');
      console.error('Test #' + testNum);
      console.trace();
    }
  }
  
  var timeBeforeTests = performance.now(); 
  // Намеренный фейл для демонстрации работы тестов
  th(false);
  
  try {
    // Тесты множеств
    th(new Natural('0') == '0');
    th(new Natural('0').n === 0);
    th(new Natural('123') == '123');
    th(new Natural('123').n === 3);
    th(new Natural(0) == '0');
    th(new Natural(123) == '123');
    th(new Natural([1,2,3]) == '123');
    th(new Natural('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890')=='12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890');
    th(new Natural('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890').n === 440);

    th(new Integer('0') == '0'); 
    th(new Integer('-1') == '-1'); 
    th(new Integer('-123') == '-123'); 
    th(new Integer('-123').n === 3); 
    th(new Integer(['-',1,2,3]) == '-123'); 
    th(new Integer(['-','1','2','3']) == '-123'); 
    th(new Integer(-1) == '-1'); 
    th(new Integer(-123) == '-123');
    th(new Integer(new Natural('123')) == '123');

    th(new Rational('0') == '0/1');
    th(new Rational('123') == '123/1');
    th(new Rational('0/1') == '0/1');
    th(new Rational('123/321') == '123/321');
    th(new Rational('-123/321') == '-123/321');
    th(new Rational('-123/321').p == '-123');
    th(new Rational('-123/321').q == '321');
    th(new Rational(new Integer('-123'), new Natural('321')) == '-123/321');

    th(new Polynomial('0') == '0');
    th(new Polynomial('11') == '11');
    th(new Polynomial('11 22') == '11x¹+22');
    th(new Polynomial('11 22 33') == '11x²+22x¹+33');
    th(new Polynomial('11 0 33') == '11x²+33');
    th(new Polynomial('0 0 33') == '33');
    th(new Polynomial('11 0 0 44 0 66') == '11x⁵+44x²+66');
    th(new Polynomial([1,2,3]) == 'x²+2x¹+3');
    th(new Polynomial('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890 424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242') == '12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890x+424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242');

    //Тесты модулей
    th(MUL_Nk_N(new Natural(0), 10) == '0');
    th(MUL_Nk_N(new Natural(1), 10) == '10000000000');
    th(MUL_Nk_N(new Natural(123), 0) == '123');
    th(MUL_Nk_N(new Natural(123), 1) == '1230');
    th(MUL_Nk_N(new Natural(123), 100000) == '123' + '0'.repeat(100000));
    th(DIV_NN_Dk(new Natural(42), new Natural(42)).d == 1);
    th(DIV_NN_Dk(new Natural(42), new Natural(42)).k == 0);
    th(DIV_NN_Dk(new Natural(123), new Natural(20)).d == 6);
    th(DIV_NN_Dk(new Natural(123), new Natural(20)).k == 0);
    th(DIV_NN_Dk(new Natural(123), new Natural(33)).d == 3);
    th(DIV_NN_Dk(new Natural(123), new Natural(33)).k == 0);  
    th(DIV_NN_Dk(new Natural(1000000), new Natural(3)).d == 3);
    th(DIV_NN_Dk(new Natural(1000000), new Natural(3)).k == 5); 
    th(DIV_NN_Dk(new Natural('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'), new Natural(3)).d == 4); 
    th(DIV_NN_Dk(new Natural('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'), new Natural(3)).k == 438); 
    th(Modules.DIV_NN_Dk.formatter(DIV_NN_Dk(new Natural(1000000), new Natural(3))) == '3*10⁵');
  }
  catch(e) {
   printResult('Критическая ошибка! ' + e.name + ': ' + e.message);
  }
  printResult('Выполнено ' + testNum + ' тестов', performance.now() - timeBeforeTests);
}